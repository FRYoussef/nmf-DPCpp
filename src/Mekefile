OPTIMIZE    = yes
DEBUG       = no
DEVICE      = cpu # {cpu, nvidia, igpu}
KERNEL     = bare # {bare, blas, cublas}


# Program flags
PDEVICE = CPU_DEVICE
PKERNEL = BARE_KERNEL

ifeq ($(DEVICE), nvidia)
  PDEVICE = NVIDIA_DEVICE
else ifeq ($(DEVICE), igpu)
  PDEVICE = INTEL_IGPU_DEVICE
endif

ifeq ($(KERNEL), blas)
  PKERNEL = BLAS_KERNEL
else ifeq ($(KERNEL), cublas)
  ifeq ($(DEVICE), nvidia)
    PKERNEL = CUBLAS_KERNEL
  endif
endif


# Standard flags
CC = clang++
CFLAGS := -std=c++11 -Wall -fsycl -fsycl-unnamed-lambda -D$(PDEVICE) -D$(PKERNEL)

# Flags for nvidia gpu
ifneq (,$(findstring nvidia, $(DEVICE)))
  CFLAGS += -fsycl-targets=nvptx64-nvidia-cuda-sycldevice
endif

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g  -DOUTPUT
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif


nmf: bare_kernel.o nmf.o common.o
	$(CC) $(CFLAGS) -o nmf bare_kernel.o nmf.o common.o

nmf.o: nmf_LeeSeung.cpp bare_kernel.o
  $(CC) $(CFLAGS) -c nmf_LeeSeung.cpp

bare_kernel.o: bare_kernel.cpp bare_kernel.h common.o
	$(CC) $(CFLAGS) -c bare_kernel.cpp

common.o: common.cpp common.h
	$(CC) $(CFLAGS) -c common.cpp



run: nmf
	./nmf V.bin 500 128 4 100 20

.PHONY: clean
clean:
	rm -f *.o *~ nmf *.linkinfo